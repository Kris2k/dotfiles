[user]
    email = '(none)'
    name = '(none)'
[color]
    diff = auto
    status = auto
    branch = auto
    grep = auto

[push]
    default = simple

[core]
    pager = less
    excludesfile = ~/.gitignore_global
	preloadindex = true
	fscache = true

[branch]
	autoSetupRebase = always

[alias]
    r  = reset
    s  = status --short
    f  = "!git ls-files | grep -i"

    bs = "!git for-each-ref --sort='-authordate' --format='%(color:green)%(authordate:relative)%09%(color:red)%(objectname:short)%09%(color:reset)%(refname) %(color:bold blue)%(authorname) %(authoremail)%(color:reset)' refs/heads | sed -e 's-refs/heads/--'"
    br = branch
    ba = branch -a
    bra = branch -a

    g  = grep -i -I
    gr = grep -i -I
    gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

    ss = status
    st = status
    sh = show --no-prefix
    sf = show --name-only
    ci = commit
    ca = commit -a
    cia = commit -a
    co = checkout

    df = diff --no-prefix
    dfs = diff --no-prefix --staged
    dff = diff --no-prefix --name-only
    dfn = diff --no-prefix --name-only
    dfm = diff --no-prefix master..@
    dif = diff --no-prefix
    diffs = diff --staged

    adp = add -p
    addp = add -p
    head = log -1 --format='%H'

    l = log --graph --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) %an <%aE>%Creset' --abbrev-commit --date=relative
    ln = "!f() { \
        git log --graph --color \
        --abbrev-commit --date=relative $@ \
        --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) %an <%aE>%Creset'\
        | awk '{print \"@~\"NR-1\"    \"$0}' \
        ; }; f "
    lnm = "!git log --graph --color \
        --abbrev-commit --date=relative master~..@ \
        --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) %an <%aE>%Creset'\
        | awk '{print \"@~\"NR-1\"    \"$0}' "

    lf = !"f() { \
        git log --abbrev-commit --name-only --pretty=format:"" $1 | sed '/^ *$/d'| sort -u \
        ; } ; f "

    ll = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) %an <%aE>%Creset' --abbrev-commit --name-status --date=relative

    lm =log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) %an <%aE>%Creset' --abbrev-commit --date=relative  origin/master~1..@
    lmm =log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) %an <%aE>%Creset' --abbrev-commit --date=relative  master~1..@
    ls = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) %an <%aE>%Creset' --abbrev-commit --date=relative  svn/trunk~1..@
    lh = "!git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) %an <%aE>%Creset' --abbrev-commit --date=relative  origin/`git rev-parse --abbrev-ref @`..@"
    # two commands to list aliases
    la = "!git config -l | grep alias | cut -c 7-"
    alias = "!git config -l | grep alias | cut -c 7-"


    pls = pull --recurse-submodules
    rmt = remote -v
    rbc = rebase --continue
    rbi = rebase --interactive
    rba = rebase --abort
    rbs = rebase --skip
    chc = cherry-pick --continue
    cha = cherry-pick --abort
    rmv = remote --verbose
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
    who = !printf \"user.name=$(git config user.name)\nuser.email=$(git config user.email)\n\"
    me = !git config user.email "k2k_chris@o2.pl" && git config user.name 'Krzysztof(Chris) Kanas'
    krzkan = !git config user.email "krzysztof.kanas@assaabloy.com" && git config user.name 'Krzysztof Kanas'
    config-set-rebase-master = !git config branch.master.rebase true

[diff]
    tool   = kdiff3
[difftool]
    prompt = false

[merge]
    tool   = kdiff3
    ff = false
[mergetool]
    prompt = false

[difftool "kdiff3"]
    trustExitCode = false
    keepBackup = false
    cmd = ~/dotfiles/scripts/kdiff3-launcher.sh  "$LOCAL" "$REMOTE"

[mergetool "kdiff3"]
    trustExitCode = false
    keepBackup = false
    cmd = ~/dotfiles/scripts/kdiff3-launcher.sh  "$BASE" "$LOCAL" "$REMOTE" "$MERGED"

[rerere]
    enabled = true

[grep]
    lineNumber = true
[gc]
	auto = 256
[log]
	date = iso
