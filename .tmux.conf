# """"""""""""""""""""""""""""""
#   prefix settings & general
# """"""""""""""""""""""""""""""
unbind C-b
set-option -g prefix C-space
bind Space send-prefix
set -s escape-time 0
set-option -g mode-keys vi
set-option -g set-titles on
set-option -g history-limit 10000
# """"""""""""""""""""""""""""""
#   Terminal evniroment settins, for keybindings
# """"""""""""""""""""""""""""""
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock
set-option -g default-terminal "screen-256color"
# set-option -g default-terminal "xterm-256color"
set-window-option -g alternate-screen off
set-option -wg xterm-keys on
# """"""""""""""""""""""""""""""
#   mouse settings  turn it off and on again
# """"""""""""""""""""""""""""""
# set-window-option -g mode-mouse off
# This have been removed in tmux 1.9  and I don't use mouse in tmux
# set-option -g mouse-select-pane off
# set-option -g mouse-resize-pane off
# set-option -g mouse-select-window off
# bind-key m set -g mode-mouse off '\;'  set -g mouse-select-pane  off  '\;' set -g mouse-resize-pane off '\;' set -g mouse-select-window off
# bind-key M set -g mode-mouse on '\;'   set -g mouse-select-pane  on  '\;' set -g mouse-resize-pane on '\;' set -g mouse-select-window on
# """"""""""""""""""""""""""""""
#   keyboard settings
# """"""""""""""""""""""""""""""
# rember C-g " makes horizontal split
bind-key C-g last-window
bind-key -n M-q last-window
bind-key R  source-file ~/.tmux.conf '\;' display "Reloaded ~./tmux.conf !"
bind-key z  resize-pane -Z
# there can be only one ! kill all pane except for last one
bind-key x  kill-pane

# next layout is kind of bothering
unbind ' '
# this because of 15 buffer took split vertical
bind-key |   split-window -h
bind-key _   split-window -v
#bind-key \   split-window -h
#bind-key -   split-window -v

bind-key h   select-pane -L
bind-key l   select-pane -R
bind-key k   select-pane -U
bind-key j   select-pane -D

bind-key n   command-prompt 'rename-window %%'

bind -n M-Left resize-pane -L 5
bind -n M-Right resize-pane -R 5
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5

bind-key  )  select-window  -t  10
bind-key  !  select-window  -t  11
bind-key  @  select-window  -t  12
bind-key '#' select-window  -t  13
bind-key '$' select-window  -t  14
bind-key '%' select-window  -t  15
bind-key  ^  select-window  -t  16
bind-key  &  select-window  -t  17
bind-key  *  select-window  -t  18
bind-key  (  select-window  -t  19

bind-key -n  M-[  previous-window
bind-key -n  M-]  next-window
bind-key 'e' command-prompt -p "move window to:"  "swap-window -t '%%'"
#bind-key -n  M-o  swap-window -t
#bind-key -n  M-p  previous-window
# """"""""""""""""""""""""""""""
#  Coppy & logging
# """"""""""""""""""""""""""""""

# -n means it has no prefix
bind-key  C-space    display-message 'Copy mode started' '\;' copy-mode
bind-key  space    display-message 'Copy mode started' '\;' copy-mode
# bind-key -n M-k    display-message 'Copy mode started' '\;' copy-mode
bind-key -n M-\;    paste-buffer
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
bind-key -Tcopy-mode-vi 'v' send-keys -X begin-selection
bind-key -Tcopy-mode-vi 'y' send-keys -X copy-selection
bind-key b pipe-pane -o 'exec cat >>~/.log_tmux.#S.#W.#I-#P' '\;' display-message 'Toggled logging to $HOME/.log_tmux.#S.#W.#I-#P'

# """"""""""""""""""""""""""""""
#  status bar
# """"""""""""""""""""""""""""""
# black, red, green, yellow, blue, magenta, cyan, white, colour0 to colour255
set -g status-fg white
set -g status-bg black
set-window-option -g window-status-current-bg blue

set -g message-fg black
set -g message-bg green

set-window-option -g window-status-bg black
set-window-option -g window-status-current-fg green
set-window-option -g status-left-length 20

# if you want session name
#set -g status-left '#[fg=green][#h:#S]#[default]'
set-window-option -g status-left '#[fg=green][#h]#[default]'
set-window-option -g status-right '#[fg=green]][#[fg=white]#20T#[fg=green]][#[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[fg=green]]'
set-window-option -g status-justify left

# """"""""""""""""""""""""""""""
#  Pane management with vim
# """"""""""""""""""""""""""""""
# bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys  M-h) || tmux select-pane -L"
# bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys  M-j) || tmux select-pane -D"
# bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys  M-k) || tmux select-pane -U"
# bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys  M-l) || tmux select-pane -R"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi M-\ select-pane -l
